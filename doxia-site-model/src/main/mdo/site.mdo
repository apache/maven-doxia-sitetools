<?xml version="1.0" encoding="UTF-8"?>

<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<model xmlns="http://codehaus-plexus.github.io/MODELLO/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://codehaus-plexus.github.io/MODELLO/2.0.0 https://codehaus-plexus.github.io/modello/xsd/modello-2.0.0.xsd"
  xml.namespace="http://maven.apache.org/SITE/${version}"
  xml.schemaLocation="https://maven.apache.org/xsd/site-${version}.xsd">
  <id>site</id>
  <name>Site</name>
  <description><![CDATA[
    <p>This is a reference for the site descriptor used in Doxia Sitetools, also known as <code>site.xml</code>:
    it is used to configure a site template (aka skin).</p>
    <p>An XSD is available at:</p>
    <ul>
      <!-- There is no property filtering in Modello, this has to be updated manually. See DOXIASITETOOLS-98. -->
      <li><a href="https://maven.apache.org/xsd/site-2.0.0.xsd">https://maven.apache.org/xsd/site-2.0.0.xsd</a></li>
    </ul>
    ]]></description>

  <defaults>
    <default>
      <key>package</key>
      <value>org.apache.maven.doxia.site</value>
    </default>
  </defaults>

  <classes>
    <class rootElement="true" xml.tagName="site" java.clone="deep">
      <name>SiteModel</name>
      <description><![CDATA[
         The <code>&lt;site&gt;</code> element is the root of the site decoration descriptor.
      ]]></description>
      <version>1.0.0+</version>
      <fields>
        <field xml.attribute="true">
          <name>name</name>
          <description>The full name of the project site.</description>
          <version>1.0.0+</version>
          <type>String</type>
          <identifier>true</identifier>
        </field>
        <field xml.attribute="true" xml.tagName="combine.self">
           <description><![CDATA[
             Whether to inherit configuration from a parent project site descriptor (<code>merge</code>)
           or not (<code>override</code>).
           ]]></description>
           <name>combineSelf</name>
           <version>1.6.0+</version>
           <type>String</type>
           <defaultValue>merge</defaultValue>
        </field>
        <field xml.attribute="true">
           <description><![CDATA[
             Whether this "site.xml" should inherit from a parent "site.xml". If set to "true" it fails the build in case a parent site descriptor cannot be retrieved.
             It does not necessarily need to be the direct parent but just a site descriptor anywhere in the parent hierarchy.
           ]]></description>
           <name>requireParent</name>
           <version>2.0.0+</version>
           <type>boolean</type>
           <defaultValue>false</defaultValue>
        </field>
        <field>
          <name>bannerLeft</name>
          <description>Banner logo on the masthead of the site to the left.</description>
          <version>1.0.0+</version>
          <association>
            <type>Banner</type>
          </association>
          <identifier>true</identifier>
        </field>
        <field>
          <name>bannerRight</name>
          <description>Banner logo on the masthead of the site to the right.</description>
          <version>1.0.0+</version>
          <association>
            <type>Banner</type>
          </association>
          <identifier>true</identifier>
        </field>
        <field xdoc.separator="blank" java.getter="false">
          <name>publishDate</name>
          <description>Modify the date published display properties.</description>
          <version>1.0.0+</version>
          <association>
            <type>PublishDate</type>
          </association>
          <identifier>true</identifier>
        </field>
        <field java.getter="false">
          <name>version</name>
          <description>Modify the version published display properties.</description>
          <version>1.0.0+</version>
          <association>
            <type>Version</type>
          </association>
          <identifier>true</identifier>
        </field>
        <field>
          <name>edit</name>
          <description><![CDATA[
            The base url to edit Doxia document sources.
            In general, <code>${project.scm.url}</code> value should do the job.
          ]]></description>
          <version>1.8.0+</version>
          <type>String</type>
          <identifier>true</identifier>
        </field>
        <field>
          <name>poweredBy</name>
          <description>Powered by logos list.</description>
          <version>1.0.0+</version>
          <association xml.tagName="logo">
            <type>Logo</type>
            <multiplicity>*</multiplicity>
          </association>
          <identifier>true</identifier>
        </field>
        <field xdoc.separator="blank">
          <name>skin</name>
          <description>The artifact containing the skin for the site.</description>
          <version>1.0.0+</version>
          <association>
            <type>Skin</type>
          </association>
          <identifier>true</identifier>
        </field>
        <field xdoc.separator="blank">
          <name>body</name>
          <description>The main site content.</description>
          <version>1.0.0+</version>
          <association>
            <type>Body</type>
          </association>
          <identifier>true</identifier>
        </field>
        <field xdoc.separator="blank">
          <name>custom</name>
          <description><![CDATA[
            Custom configuration for use with customized Velocity templates. Data from this field are
            accessible in Velocity template from <code>$site.custom</code> variable as DOM content.
            Example: <code>$site.custom.getChild( 'customElement' ).getValue()</code>
          ]]></description>
          <version>1.0.0+</version>
          <type>DOM</type>
          <identifier>true</identifier>
        </field>
        <field xml.transient="true">
          <name>lastModified</name>
          <description>Timestamp of the last modification of this site model.</description>
          <version>1.0.1+</version>
          <type>long</type>
        </field>
      </fields>
      <codeSegments>
        <codeSegment>
          <version>1.0.0+</version>
          <code>
            <![CDATA[
    public static final String MERGE = "merge";

    public static final String OVERRIDE = "override";

    public boolean isMergeParent()
    {
        return !OVERRIDE.equals( combineSelf );
    }

    public PublishDate getPublishDate()
    {
        if ( publishDate == null )
            return new PublishDate();
        else
            return publishDate;
    }

    public boolean isDefaultPublishDate()
    {
        return publishDate == null;
    }

    public Version getVersion()
    {
        if ( version == null )
            return new Version();
        else
            return version;
    }

    public boolean isDefaultVersion()
    {
        return version == null;
    }

    private java.util.Map<String, Menu> menusByRef;

    /**
     * @param key not null
     * @return the menu ref defined by the given key.
     */
    public Menu getMenuRef( String key )
    {
        if ( menusByRef == null )
        {
            menusByRef = new java.util.HashMap<String, Menu>();

            if ( body != null )
            {
                for ( Menu menu : body.getMenus() )
                {
                    if ( menu.getRef() != null )
                    {
                        menusByRef.put( menu.getRef(), menu );
                    }
                }
            }
        }
        return menusByRef.get( key );
    }

    /**
     * @param key not null
     */
    public void removeMenuRef( String key )
    {
        if ( body != null )
        {
            for ( java.util.Iterator<Menu> i = body.getMenus().iterator(); i.hasNext(); )
            {
                Menu menu = i.next();
                if ( key.equals( menu.getRef() ) )
                {
                    i.remove();
                }
            }
        }
    }

    /**
     * @return the menus list or EMPTY_LIST.
     */
    public java.util.List<Menu> getMenus()
    {
        java.util.List menus;
        if ( body != null && body.getMenus() != null )
        {
            menus = body.getMenus();
        }
        else
        {
            menus = java.util.Collections.emptyList();
        }
        return menus;
    }
            ]]>
          </code>
        </codeSegment>
        <codeSegment>
          <version>1.7.0+</version>
          <code>
    /**
     * @since 1.7
     * @see SiteUtils#isLink
     */
    public boolean isLink( String href )
    {
        return SiteUtils.isLink( href );
    }
          </code>
        </codeSegment>
        <codeSegment>
          <version>1.8.0+</version>
          <code>
    /**
     * @since 1.8
     * @see SiteUtils#getCustomChild
     */
    public Object getCustomChild( String path )
    {
        return SiteUtils.getCustomChild( (org.codehaus.plexus.util.xml.Xpp3Dom) custom, path );
    }

    /**
     * @since 1.8
     * @see SiteUtils#getCustomValue
     */
    public String getCustomValue( String path )
    {
        return SiteUtils.getCustomValue( (org.codehaus.plexus.util.xml.Xpp3Dom) custom, path );
    }

    /**
     * @since 1.8
     * @see SiteUtils#getCustomValue
     */
    public String getCustomValue( String path, String defaultValue )
    {
        return SiteUtils.getCustomValue( (org.codehaus.plexus.util.xml.Xpp3Dom) custom, path, defaultValue );
    }
          </code>
        </codeSegment>
      </codeSegments>
    </class>

    <class java.clone="deep">
      <name>Banner</name>
      <description>Banner logo on the masthead of the site.</description>
      <version>1.0.0+</version>
      <superClass>LinkItem</superClass>
    </class>

    <class java.clone="deep">
      <name>PublishDate</name>
      <description>Modify display properties for date published.</description>
      <version>1.0.0+</version>
      <fields>
        <field xml.attribute="true">
          <name>position</name>
          <description>Where to place the date published (left, right, navigation-top, navigation-bottom, bottom).</description>
          <version>1.0.0+</version>
          <type>String</type>
          <identifier>true</identifier>
          <defaultValue>left</defaultValue>
        </field>
        <field xml.attribute="true">
          <name>format</name>
          <description>Date format to use.</description>
          <version>1.0.0+</version>
          <type>String</type>
          <identifier>true</identifier>
          <defaultValue>yyyy-MM-dd</defaultValue>
        </field>
        <field xml.attribute="true">
          <name>timezone</name>
          <description>
            <![CDATA[
              The timezone to use. Use <code>system</code> for the default locale for this instance
              of the Java Virtual Machine. Refer to <code>java.util.TimeZone</code> for details.
            ]]>
          </description>
          <version>1.8.1+</version>
          <type>String</type>
          <identifier>true</identifier>
          <defaultValue>Etc/UTC</defaultValue>
        </field>
      </fields>
    </class>

    <class java.clone="deep">
      <name>Version</name>
      <description>Modify display properties for version published.</description>
      <version>1.0.0+</version>
      <fields>
        <field xml.attribute="true">
          <name>position</name>
          <description>Where to place the version published (left, right, navigation-top, navigation-bottom, bottom).</description>
          <version>1.0.0+</version>
          <type>String</type>
          <identifier>true</identifier>
          <defaultValue>left</defaultValue>
        </field>
      </fields>
    </class>

    <class java.clone="deep">
      <name>Logo</name>
      <description>Power by logo on the navigation.</description>
      <version>1.0.0+</version>
      <superClass>LinkItem</superClass>
    </class>

    <class java.clone="deep" xsd.compositor="sequence">
      <name>Body</name>
      <description>The main content.</description>
      <version>1.0.0+</version>
      <fields>
        <field>
          <name>head</name>
          <description>Additional content (like JavaScript) to include in the HEAD block of the generated pages.</description>
          <version>1.7.0+</version>
          <type>String</type>
          <identifier>true</identifier>
        </field>
        <field>
          <name>links</name>
          <description>A list of links to display in the navigation.</description>
          <version>1.0.0+</version>
          <association xml.tagName="item">
            <type>LinkItem</type>
            <multiplicity>*</multiplicity>
          </association>
          <identifier>true</identifier>
        </field>
        <field>
          <name>breadcrumbs</name>
          <description>A list of breadcrumbs to display in the navigation.</description>
          <version>1.0.0+</version>
          <association xml.tagName="item">
            <type>LinkItem</type>
            <multiplicity>*</multiplicity>
          </association>
          <identifier>true</identifier>
        </field>
        <field xdoc.separator="blank">
          <name>menus</name>
          <description>A list of menus to include in the navigation.</description>
          <version>1.0.0+</version>
          <association xml.itemsStyle="flat">
            <type>Menu</type>
            <multiplicity>*</multiplicity>
          </association>
          <identifier>true</identifier>
        </field>
        <field>
          <name>footer</name>
          <description>If present, the contained text will be used instead of the generated copyright text.</description>
          <version>1.7.0+</version>
          <type>String</type>
          <identifier>true</identifier>
        </field>
      </fields>
    </class>

    <class java.clone="deep">
      <name>LinkItem</name>
      <description>A link in the navigation.</description>
      <version>1.0.0+</version>
      <fields>
        <field xml.attribute="true">
          <name>name</name>
          <description>The name to display for the link.</description>
          <version>1.0.0+</version>
          <type>String</type>
          <identifier>true</identifier>
        </field>
        <field xml.attribute="true">
          <name>href</name>
          <description>The href to use for the link.</description>
          <version>1.0.0+</version>
          <type>String</type>
          <identifier>true</identifier>
        </field>
        <field xml.attribute="true">
          <name>target</name>
          <description>Where the new document will be displayed when the user follows a link, i.e. _blank opens the new document in a new window.</description>
          <version>1.0.1+</version>
          <type>String</type>
          <identifier>true</identifier>
        </field>
        <field>
          <name>image</name>
          <version>2.0.0+</version>
          <description>The image for the link.</description>
          <association>
            <type>Image</type>
          </association>
          <identifier>true</identifier>
        </field>
      </fields>
    </class>

    <class java.clone="deep" xsd.compositor="sequence">
      <name>Menu</name>
      <description>A menu in the navigation.</description>
      <version>1.0.0+</version>
      <fields>
        <field xml.attribute="true">
          <name>name</name>
          <description>The name to display for the menu.</description>
          <version>1.0.0+</version>
          <type>String</type>
          <identifier>true</identifier>
        </field>
        <field xml.attribute="true">
          <name>inherit</name>
          <description><![CDATA[
            The way in which the menu is inherited. Can be one of : <code>top</code>, <code>bottom</code>.
          ]]></description>
          <version>1.0.0+</version>
          <type>String</type>
          <identifier>true</identifier>
        </field>
        <field xml.attribute="true">
          <name>inheritAsRef</name>
          <description><![CDATA[
            If this is a reference, setting to <code>true</code> means that it will be populated
            in the site, whereas if it is <code>false</code>, it is populated in the parent and then inherited.
          ]]></description>
          <version>1.0.0+</version>
          <type>boolean</type>
        </field>
        <field xml.attribute="true">
          <name>ref</name>
          <description><![CDATA[
            Mark this menu as reference to a pre-defined menu: <code>reports</code>, <code>modules</code>
            or <code>parent</code>. It will be populated at runtime with corresponding pre-defined content.
          ]]></description>
          <version>1.0.0+</version>
          <type>String</type>
          <identifier>true</identifier>
        </field>
        <field>
          <name>image</name>
          <version>2.0.0+</version>
          <description>The image for the menu.</description>
          <association>
            <type>Image</type>
          </association>
          <identifier>true</identifier>
        </field>
        <field>
          <name>items</name>
          <description>A list of menu item.</description>
          <version>1.0.0+</version>
          <association xml.itemsStyle="flat">
            <type>MenuItem</type>
            <multiplicity>*</multiplicity>
          </association>
          <identifier>true</identifier>
        </field>
      </fields>
    </class>

    <class java.clone="deep" xsd.compositor="sequence">
      <name>MenuItem</name>
      <description>A menu item.</description>
      <version>1.0.0+</version>
      <superClass>LinkItem</superClass>
      <fields>
        <field xml.attribute="true">
          <name>collapse</name>
          <description>Whether to collapse children elements of an item menu (by default).</description>
          <version>1.0.0+</version>
          <type>boolean</type>
          <identifier>true</identifier>
        </field>
        <field xml.attribute="true">
          <name>ref</name>
          <description>A reference to a pre-defined menu item, such as a report (specified by the report goal
            name). Any elements explicitly given override those from the pre-defined reference.</description>
          <version>1.0.0+</version>
          <type>String</type>
          <identifier>true</identifier>
        </field>
        <field>
          <name>items</name>
          <description>A list of menu item.</description>
          <version>1.0.0+</version>
          <association xml.itemsStyle="flat">
            <type>MenuItem</type>
            <multiplicity>*</multiplicity>
          </association>
          <identifier>true</identifier>
        </field>
      </fields>
    </class>

    <class java.clone="deep">
      <name>Image</name>
      <description>An image.</description>
      <version>2.0.0+</version>
      <fields>
        <field xml.attribute="true">
          <name>src</name>
          <description>The source location.</description>
          <version>2.0.0+</version>
          <type>String</type>
          <required>true</required>
          <identifier>true</identifier>
        </field>
        <field xml.attribute="true">
          <name>position</name>
          <description>Where to place the image relative to the displayed name (left or right).</description>
          <version>2.0.0+</version>
          <type>String</type>
          <identifier>true</identifier>
          <defaultValue>left</defaultValue>
        </field>
        <field xml.attribute="true">
          <name>alt</name>
          <description>The alternative text to use.</description>
          <version>2.0.0+</version>
          <type>String</type>
          <identifier>true</identifier>
        </field>
        <field xml.attribute="true">
          <name>width</name>
          <description>The width to use.</description>
          <version>2.0.0+</version>
          <type>String</type>
          <identifier>true</identifier>
        </field>
        <field xml.attribute="true">
          <name>height</name>
          <description>The height to use.</description>
          <version>2.0.0+</version>
          <type>String</type>
          <identifier>true</identifier>
        </field>
        <field xml.attribute="true">
          <name>style</name>
          <description>The style to use.</description>
          <version>2.0.0+</version>
          <type>String</type>
          <identifier>true</identifier>
        </field>
      </fields>
    </class>

    <class java.clone="deep">
      <name>Skin</name>
      <description>A skin artifact declaration.</description>
      <version>1.0.0+</version>
      <fields>
        <field>
          <name>groupId</name>
          <description>The skin group ID.</description>
          <version>1.0.0+</version>
          <type>String</type>
          <required>true</required>
          <identifier>true</identifier>
        </field>
        <field>
          <name>artifactId</name>
          <description>The skin artifact ID.</description>
          <version>1.0.0+</version>
          <type>String</type>
          <required>true</required>
          <identifier>true</identifier>
        </field>
        <field>
          <name>version</name>
          <description>The skin version.</description>
          <version>1.0.0+</version>
          <type>String</type>
          <identifier>true</identifier>
        </field>
      </fields>
    </class>
  </classes>
</model>
